name: CI

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - README.md

jobs:
  debian:
    name: Debian
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: 
          - "ubuntu:jammy"
          - "ubuntu:focal"
          - "ubuntu:bionic"
        erlang_version:
          - "26.0"
          - "25.3"
          - "25.2.3"
          - "25.2.2"
          - "25.2.1"
          - "25.1.1"
          - "25.1"
          - "25.0.4"
          - "25.0.3"
          - "25.0.1"
          - "25.0"
          - "24.3.4.8"
          - "24.3.4.7"
          - "24.3.4.6"
          - "24.3.4.5"
          - "24.3.4.3"
          - "24.3.4.2"
          - "24.3.4.1"
          - "24.3.4"
          - "24.2.2"
          - "24.2"
          - "24.1.7"
          - "24.0.5"
          - "24.0.4"
          - "24.0.2"
          - "24.0.1"
          - "24.0"
          - "23.3.1"
          - "23.2.3"
          - "23.2.1"
          - "23.1"
          - "22.3.4.9"
          - "22.3.4.1"
          - "22.3.4"
          - "22.3.2"
          - "22.2.4"
          - "22.2.3"
          - "22.0.7"
          - "22.0.1"
          - "21.3.8.6"
          - "21.3.8.17"
          - "21.3.8.16"
          - "21.3.8.15"
          - "21.2.3"
          - "21.2"
          - "21.1"
          - "21.0"
          - "20.3.8.26"
          - "20.3.8.22"
          - "20.3"
          - "20.1"
          - "20.0"
          - "19.3.6.13"
          - "19.3"
          - "19.2"
          - "19.1"
          - "18.3"
          - "18.2"
          - "18.1"
          - "18.0"
        exclude:
          # compilation fails on bionic, let's skip it for now
          - image: "ubuntu:bionic"
            erlang_version: "26.0"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Export packages
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha,scope=${{ github.workflow }}-${{ matrix.image }}-${{ matrix.erlang_version }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-${{ matrix.image }}-${{ matrix.erlang_version }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            erlang_version=${{ matrix.erlang_version }}
            image=${{ matrix.image }}
          outputs: pkgs

      - name: Generate artifact name
        run: |
          echo "IMAGE=$(echo ${{ matrix.image }} | tr : -)" >> $GITHUB_ENV
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: erlang-${{ matrix.erlang_version }}-${{ env.IMAGE }}-deb
          path: pkgs
      - name: Upload to Packagecloud
        run: |
          set -euxo pipefail
          ID=$(echo "${{ matrix.image }}" | cut -f1 -d:)
          VERSION_CODENAME=$(echo "${{ matrix.image }}" | cut -f2 -d:)
          cat > $HOME/.curlrc << EOF
          -u "${{ secrets.packagecloud_token }}:"
          --no-progress-meter
          --fail
          EOF
          curl -O https://packagecloud.io/api/v1/distributions.json
          DIST_ID=$(jq ".deb[] | select(.index_name == \"$ID\").versions[] | select(.index_name == \"$VERSION_CODENAME\").id" distributions.json)
          find pkgs -name "*.deb" | xargs -I@ basename @ | xargs -I@ curl -XDELETE "https://packagecloud.io/api/v1/repos/cloudamqp/erlang/$ID/$VERSION_CODENAME/@" || true
          find pkgs -name "*.deb" | xargs -I{} curl -XPOST -F "package[distro_version_id]=$DIST_ID" -F "package[package_file]=@{}" https://packagecloud.io/api/v1/repos/cloudamqp/erlang/packages.json
        if: ${{ github.ref == 'refs/heads/main' }}
